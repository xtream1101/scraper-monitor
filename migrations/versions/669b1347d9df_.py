"""empty message

Revision ID: 669b1347d9df
Revises: None
Create Date: 2016-07-11 16:26:47.615662

"""

# revision identifiers, used by Alembic.
revision = '669b1347d9df'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='sm_dev'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='sm_dev'
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['sm_dev.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='sm_dev'
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['sm_dev.role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['sm_dev.user.id'], ),
    schema='sm_dev'
    )
    op.create_table('apikey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('host', sa.String(length=255), nullable=True),
    sa.Column('key', sa.String(length=36), nullable=True),
    sa.Column('time_added', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['sm_dev.organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key'),
    schema='sm_dev'
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['sm_dev.organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='sm_dev'
    )
    op.create_table('organizations_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['sm_dev.organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['sm_dev.user.id'], ),
    schema='sm_dev'
    )
    op.create_table('scraper',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('owner', sa.String(length=64), nullable=True),
    sa.Column('key', sa.String(length=32), nullable=True),
    sa.Column('time_added', sa.DateTime(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['sm_dev.group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key'),
    schema='sm_dev'
    )
    op.create_table('run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=32), nullable=True),
    sa.Column('environment', sa.String(length=4), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('stop_time', sa.DateTime(), nullable=True),
    sa.Column('runtime', sa.Float(), nullable=True),
    sa.Column('annotation', sa.Text(), nullable=True),
    sa.Column('total_urls_hit', sa.Integer(), nullable=True),
    sa.Column('num_rows_added_to_db', sa.Integer(), nullable=True),
    sa.Column('ref_data_count', sa.Integer(), nullable=True),
    sa.Column('ref_data_success_count', sa.Integer(), nullable=True),
    sa.Column('url_error_count', sa.Integer(), nullable=True),
    sa.Column('critical_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('warning_count', sa.Integer(), nullable=True),
    sa.Column('scraper_key', sa.String(length=32), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['sm_dev.group.id'], ),
    sa.ForeignKeyConstraint(['scraper_key'], ['sm_dev.scraper.key'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid'),
    schema='sm_dev'
    )
    op.create_table('run_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exc_info', sa.Text(), nullable=True),
    sa.Column('exc_text', sa.Text(), nullable=True),
    sa.Column('filename', sa.String(length=256), nullable=True),
    sa.Column('func_name', sa.String(length=256), nullable=True),
    sa.Column('level_name', sa.String(length=256), nullable=True),
    sa.Column('level_no', sa.Integer(), nullable=True),
    sa.Column('line_no', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('module', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('pathname', sa.String(length=256), nullable=True),
    sa.Column('process', sa.Integer(), nullable=True),
    sa.Column('process_name', sa.String(length=256), nullable=True),
    sa.Column('relative_created', sa.Float(), nullable=True),
    sa.Column('stack_info', sa.String(length=256), nullable=True),
    sa.Column('thread', sa.String(length=256), nullable=True),
    sa.Column('thread_name', sa.String(length=256), nullable=True),
    sa.Column('time_collected', sa.DateTime(), nullable=True),
    sa.Column('run_uuid', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['run_uuid'], ['sm_dev.run.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='sm_dev'
    )
    op.create_table('run_url_error',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=True),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('ref_id', sa.String(length=256), nullable=True),
    sa.Column('ref_table', sa.String(length=256), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('thread_name', sa.String(length=256), nullable=True),
    sa.Column('num_tries', sa.Integer(), nullable=True),
    sa.Column('time_collected', sa.DateTime(), nullable=True),
    sa.Column('run_uuid', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['run_uuid'], ['sm_dev.run.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='sm_dev'
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('run_url_error', schema='sm_dev')
    op.drop_table('run_log', schema='sm_dev')
    op.drop_table('run', schema='sm_dev')
    op.drop_table('scraper', schema='sm_dev')
    op.drop_table('organizations_users', schema='sm_dev')
    op.drop_table('group', schema='sm_dev')
    op.drop_table('apikey', schema='sm_dev')
    op.drop_table('roles_users', schema='sm_dev')
    op.drop_table('organization', schema='sm_dev')
    op.drop_table('user', schema='sm_dev')
    op.drop_table('role', schema='sm_dev')
    ### end Alembic commands ###
